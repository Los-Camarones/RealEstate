name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  # Builds the project and notifies the team of the outcome
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: Send notification to Discord
      uses: rjstone/discord-webhook-notify@v1.0.0
      if: always()  # This ensures the notification is sent whether the previous steps failed or succeeded
      with:
        webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        username: 'GitHub Actions CI'
        content: >
          **CI Update**:
          - **Repository**: ${{ github.repository }}
          - **Run**: [View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - **Status**: ${{ job.status }}
          - **Branch**: ${{ github.ref_name }}
          - **Commit**: ${{ github.sha }}
          - **Actor**: ${{ github.actor }}
          - **Event Name**: ${{ github.event_name }}

  # Checks to see if commit message follows the format of including teh story number
  check-commit-message:
    runs-on: ubuntu-latest
    needs: build-and-test  # This ensures that commit message validation waits for the build and test job to complete
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Validate commit messages
        id: validate_commits
        run: |
          echo "Checking commit messages..."
          pattern='^#[A-Z][A-Z]-[0-9][0-9]+$'  # Adjust pattern to match your project's commit message format
          error_flag=0
          for commit_message in $(git log --format=%s ${{ github.event.before }}..${{ github.event.after }}); do
              echo "Commit message: $commit_message"
              if ! [[ "$commit_message" =~ $pattern ]]; then
                  echo "::error ::Invalid commit message: \"$commit_message\""
                  echo "Commit messages must match the pattern '#[A-Z][A-Z]-[0-9][0-9]+', e.g., #AA-101."
                  error_flag=1
              fi
          done
          echo "::set-output name=status::${error_flag}"

      - name: Notify Discord on failure
        if: steps.validate_commits.outputs.status == '1'
        uses: rjstone/discord-webhook-notify@v1.0.0
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'GitHub Actions CI'
          content: 'Commit message check failed. Please review the commit messages.'

      - name: Notify Discord on success
        if: steps.validate_commits.outputs.status == '0'
        uses: rjstone/discord-webhook-notify@v1.0.0
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'GitHub Actions CI'
          content: 'All commit messages are valid. Good job!'
