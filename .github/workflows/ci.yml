name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  # Builds the project and notifies the team of the outcome
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.17.0'

    # Setup & Building Section
    - name: Install dependencies
      run: npm install
      working-directory: my-app 

    - name: Run tests         # Currently No tests yet 
      run: npm test
      working-directory: my-app

    - name: Build project
      run: npm run build 
      working-directory: my-app

    # Push Results to Discord
    - name: Send notification to Discord
      uses: rjstone/discord-webhook-notify@v1.0.0
      if: always()  # This ensures the notification is sent whether the previous steps failed or succeeded
      with:
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
        username: 'GitHub Actions CI'
        text: >
          **CI Update**:
          - **Repository**: ${{ github.repository }}
          - **Run**: [View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - **Status**: ${{ job.status }}
          - **Branch**: ${{ github.ref_name }}
          - **Commit**: ${{ github.sha }}
          - **Actor**: ${{ github.actor }}
          - **Event Name**: ${{ github.event_name }}

  # Checks to see if commit message follows the format of including the story number
  check-commit-message:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Validate commit messages
        id: validate_commits
        run: |  
          echo "Checking commit messages..."
          pattern='^DP-[0-9]+ .+$'
          error_flag=0

          # This will ensure that spaces in commit messages are handled properly    
          IFS=$'\n' 
          for commit_message in $(git log --pretty=format:"%s" ${{ github.event.before }}..${{ github.event.after }}); do
              echo "Commit message: $commit_message"
              if ! [[ "$commit_message" =~ $pattern ]]; then
                  echo "::error ::Invalid commit message: \"$commit_message\""
                  echo "Commit messages must match the pattern 'DP-<number> <text>', e.g., DP-123 Any text here."
                  error_flag=1
                  break # Exit the loop on the first error
              fi
          done
          echo "error_flag=${error_flag}" >> $GITHUB_ENV

      - name: Notify Discord on failure
        if: ${{ env.error_flag == '1' }}
        uses: rjstone/discord-webhook-notify@v1.0.0
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'GitHub Actions CI'
          content: 'Commit message check failed. Please review the commit messages.'
