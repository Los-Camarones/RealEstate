name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  # Builds the project and notifies the team of the outcome
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.17.0'

    # Setup & Building Section
    - name: Install dependencies
      run: npm install
      working-directory: my-app 

    - name: Run tests         # Currently No tests yet 
      run: npm test
      working-directory: my-app

    - name: Build project
      run: npm run build 
      working-directory: my-app

    # Discord notification Section
    - name: Prepare Discord message
      if: always()
      run: |
        commit_author="N/A"
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          commit_author="${{ github.event.pull_request.head.commit.author.name }}"
        fi
        echo "CI Update:" >> discord_message.txt
        echo "- Repository: ${{ github.repository }}" >> discord_message.txt
        echo "- Run: [View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> discord_message.txt
        echo "- Status: ${{ job.status }}" >> discord_message.txt
        echo "- Branch: ${{ github.ref_name }}" >> discord_message.txt
        echo "- Commit: ${{ github.sha }}" >> discord_message.txt
        echo "- Actor: ${{ github.actor }}" >> discord_message.txt
        echo "- Commit Author: $commit_author" >> discord_message.txt
        echo "- Event Name: ${{ github.event_name }}" >> discord_message.txt
      env:
        DISCORD_MESSAGE: $(< discord_message.txt)

    - name: Send notification to Discord
      if: always()
      uses: rjstone/discord-webhook-notify@v1.0.0
      with:
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
        username: 'GitHub Actions CI'
        text: ${{ env.DISCORD_MESSAGE }}


  # Checks to see if commit message follows the format of including the story number
  check-commit-message:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Validate commit messages
        run: |
          echo "Checking commit messages..."
          pattern='^DP-[0-9]+ .+$'
          git fetch --prune --unshallow
          commit_messages=$(git log --no-merges --format="%s" origin/main..HEAD)
          echo "$commit_messages"
          error_flag=0
          while IFS= read -r commit_message; do
            if ! [[ $commit_message =~ $pattern ]]; then
              echo "Invalid commit message: \"$commit_message\""
              echo "Commit messages must match the pattern 'DP-<number> <text>', e.g., DP-123 Any text here."
              error_flag=1
              break
            fi
          done <<< "$commit_messages"
          if [ $error_flag -ne 0 ]; then
            echo "::error ::Some commit messages do not follow the required format."
            exit 1
          fi

      - name: Notify Discord on failure
        if: ${{ failure() }}
        uses: rjstone/discord-webhook-notify@v1.0.0
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'GitHub Actions CI'
          content: 'Commit message check failed. Please review the commit messages.'