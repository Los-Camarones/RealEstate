name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  # Builds the project and notifies the team of the outcome
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.17.0'

    # Navigate to the directory where package.json is located before running npm commands
    - name: Install dependencies
      run: npm install
      working-directory: my-app 

    - name: Run tests
      run: npm test
      working-directory: my-app

    - name: Build project
      run: npm run build
      working-directory: my-app

    - name: Notify Discord with build errors
      if: failure()  # This step will run only if the build step fails
      run: |
        ERROR_MESSAGE=$(grep -m 1 "Error:" build-output.log || echo "No specific errors found.")
        FILE_PATH=$(grep -m 1 "Error:" build-output.log | cut -d ' ' -f 1 || echo "Unknown file")
        SHORT_DESCRIPTION=$(grep -m 1 "Error:" build-output.log | cut -d ':' -f 2- || echo "Build failed with an error.")
        curl -H "Content-Type: application/json" \
             -X POST \
             -d '{"username": "GitHub Actions CI", "content": "Build failed with an error in `'"$FILE_PATH"'`: `'"$SHORT_DESCRIPTION"'. See more details in the Actions logs."}' \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
      working-directory: my-app
      continue-on-error: true  # Continue even if this step fails


    # New step to print the content of the npm debug log
    - name: Print npm debug log
      if: failure()  # This step will run only if the previous step fails
      run: |
        ls -l /home/runner/.npm/_logs/ || echo "No npm log files found."
        latest_log=$(ls -t /home/runner/.npm/_logs/ | head -n1)
        cat "/home/runner/.npm/_logs/$latest_log" || echo "Unable to print npm log."
      working-directory: my-app
      continue-on-error: true

    - name: Send notification to Discord
      uses: rjstone/discord-webhook-notify@v1.0.0
      if: always()  # This ensures the notification is sent whether the previous steps failed or succeeded
      with:
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
        username: 'GitHub Actions CI'
        text: >
          **CI Update**:
          - **Repository**: ${{ github.repository }}
          - **Run**: [View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - **Status**: ${{ job.status }}
          - **Branch**: ${{ github.ref_name }}
          - **Commit**: ${{ github.sha }}
          - **Actor**: ${{ github.actor }}
          - **Event Name**: ${{ github.event_name }}

  # Checks to see if commit message follows the format of including teh story number
  check-commit-message:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Validate commit messages
        id: validate_commits
        run: |
          echo "Checking commit messages..."
          pattern='^DP-[0-9]+ .+$'  # Adjusted pattern to match the new commit message format
          error_flag=0
          for commit_message in $(git log --format=%s ${{ github.event.before }}..${{ github.event.after }}); do
              echo "Commit message: $commit_message"
              if ! [[ "$commit_message" =~ $pattern ]]; then
                  echo "::error ::Invalid commit message: \"$commit_message\""
                  echo "Commit messages must match the pattern 'DP-<number> <text>', e.g., DP-123 Any text here."
                  error_flag=1
              fi
          done
          echo "::set-output name=status::${error_flag}"


      - name: Notify Discord on failure
        if: steps.validate_commits.outputs.status == '1'
        uses: rjstone/discord-webhook-notify@v1.0.0
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'GitHub Actions CI'
          content: 'Commit message check failed. Please review the commit messages.'

      - name: Notify Discord on success
        if: steps.validate_commits.outputs.status == '0'
        uses: rjstone/discord-webhook-notify@v1.0.0
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'GitHub Actions CI'
          content: 'All commit messages are valid. Good job!'
